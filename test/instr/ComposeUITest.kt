/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// See the dex output of this file in P1833358478, as generated by the test plan of D75625585, which
// we failed to make work.

// An integration test version of this file is also available with the same name.

@file:Suppress("IncorrectPackageName")

package redex

import androidx.compose.runtime.Composable

// CHECK: method: direct redex.ComposeUITestKt.SuperTextPrinter
@Composable
private fun SuperTextPrinter(supertext: String, subtext: String = getTestDefault()) {
  println("Super Text: $supertext")
  // Verify optimization of the changed parameter.
  // PRECHECK: and-int/lit{{.*}}
  // PRECHECK: if-nez {{.*}}
  // PRECHECK: invoke-interface {{.*}} androidx.compose.runtime.Composer.changed{{.*}}
  // Some bits of the changed parameter are known to be 1 and thus unequals zero.
  // Don't run POSTCHECK-NOT: and-int/lit{{.*}} and if-nez {{.*}} here, because
  // there are other appeareances of them that should not be optimized out.
  // POSTCHECK-NOT: invoke-interface {{.*}} androidx.compose.runtime.Composer.changed{{.*}}

  // Verify optimization of the default parameter.
  // PRECHECK: and-int/lit{{.*}}
  // PRECHECK: if-eqz {{.*}}
  // PRECHECK: invoke-static {{.*}} redex.ComposeUITestKt.getTestDefault{{.*}}
  // A bit in the defaults parameter is known to be never set, therefore the
  // call to getTestDefault is optimized out. This defaults parameter is more
  // convoluted than that in a normal Kotlin default method: This defaults is
  // always captured by a lambda and passed to a callback to the Composable
  // method itself.
  // Don't run POSTCHECK-NOT: and-int/lit{{.*}} and if-eqz {{.*}} here, because
  // there are other appeareances of them that should not be optimized out.
  // POSTCHECK-NOT: invoke-static {{.*}} redex.ComposeUITestKt.getTestDefault{{.*}}
  SubTextPrinter(subtext)
}

// CHECK: method: direct redex.ComposeUITestKt.SubTextPrinter
@Composable
private fun SubTextPrinter(text: String) {
  println("Sub Text: $text")
}

// CHECK: method: direct redex.ComposeUITestKt.getTestDefault
@Composable
private fun getTestDefault(): String {
  return "Test Default"
}

// CHECK: method: direct redex.ComposeUITestKt.HelloWorldText
@Composable
fun HelloWorldText() {
  // subtext default is never used.
  SuperTextPrinter("English", "Hello World")
}
